import React from 'react';
import Link from 'next/link';
import Image from 'next/image';

import Twemoji from "@/components/atoms/Twemoji";

type CardProps = {
  title: string;
  created_at: string;
  href?: string;
  // onClick?: () => void;
  // className?: string;
};

const Card: React.FC<CardProps> = ({ title, created_at, href/* recreationId, data */ }) => {
  // ÁµµÊñáÂ≠ó„Çí„É©„É≥„ÉÄ„É†„ÅßÁîüÊàê„Åô„ÇãÈñ¢Êï∞
  const randomEmoji = (seed: string) => {
    const emojiList = [
      'üéâ', 'üéä', 'üéà', 'üéÅ', 'üéÇ',
      'üéÑ', 'üéÉ', 'üéÜ', 'üéá', 'üß®',
      'üéé', 'üéè', 'üéê', 'üéë', 'üßß',
      'üéÄ', 'üéÅ', 'üéó', 'üéü', 'üé´',
      'üéñ', 'üèÜ', 'üèÖ', 'ü•á', 'ü•à',
      'ü•â', '‚öΩÔ∏è', 'üèÄ', 'üèà', '‚öæÔ∏è',
      'ü•é', 'üéæ', 'üèê', 'üèâ', 'ü•è',
      'üé±', 'üèì', 'üè∏', 'üèí', 'üèë',
      'ü•ç', 'üèè', 'ü•Ö', '‚õ≥Ô∏è', 'üèπ',
      'üé£', 'ü§ø', 'ü•ä', 'ü•ã', 'üéΩ',
      'üõπ', 'üõ∑', '‚õ∏', 'ü•å', 'üéø',
      '‚õ∑', 'üèÇ', 'ü™Ç', 'üèãÔ∏è‚Äç‚ôÄÔ∏è', 'üèãÔ∏è‚Äç‚ôÇÔ∏è',
      'ü§º‚Äç‚ôÄÔ∏è', 'ü§º‚Äç‚ôÇÔ∏è', 'ü§∏‚Äç‚ôÄÔ∏è', 'ü§∏‚Äç‚ôÇÔ∏è', '‚õπÔ∏è‚Äç‚ôÄÔ∏è',
      '‚õπÔ∏è‚Äç‚ôÇÔ∏è', 'ü§∫', 'ü§æ‚Äç‚ôÄÔ∏è', 'ü§æ‚Äç‚ôÇÔ∏è', 'üèåÔ∏è‚Äç‚ôÄÔ∏è',
      'üèåÔ∏è‚Äç‚ôÇÔ∏è', 'üèá', 'üßò‚Äç‚ôÄÔ∏è', 'üßò‚Äç‚ôÇÔ∏è', 'üèÑ‚Äç‚ôÄÔ∏è',
      'üèÑ‚Äç‚ôÇÔ∏è', 'üèä‚Äç‚ôÄÔ∏è', 'üèä‚Äç‚ôÇÔ∏è', 'ü§Ω‚Äç‚ôÄÔ∏è', 'ü§Ω',
      'üö£‚Äç‚ôÄÔ∏è', 'üö£', 'üßó‚Äç‚ôÄÔ∏è', 'üßó‚Äç‚ôÇÔ∏è', 'üöµ‚Äç‚ôÄÔ∏è',
      'üöµ‚Äç‚ôÇÔ∏è', 'üö¥‚Äç‚ôÄÔ∏è', 'üö¥‚Äç‚ôÇÔ∏è', 'üèÜ', 'ü•á',
      'ü•à', 'ü•â', 'üèÖ', 'üéñ', 'üèµ',
      'üéó', 'üé´', 'üéü', 'üé™', 'ü§π‚Äç‚ôÄÔ∏è',
      'ü§π‚Äç‚ôÇÔ∏è', 'üé≠', 'ü©∞', 'üé®', 'üé¨',
      'üé§', 'üéß', 'üéº', 'üéπ', 'ü•Å']

    const index = Math.floor(deterministicRandom(seed) * emojiList.length);
    return emojiList[index];
  }

  const deterministicRandom = (seed: string) => {
    let hash = 0;
    for (let i = 0; i < seed.length; i++) {
      const char = seed.charCodeAt(i);
      hash = ((hash << 5) - hash) + char;
      hash |= 0; // Convert to 32bit integer
    }
    return (hash & 0x7FFFFFFF) / 0x7FFFFFFF; // Convert to [0, 1] range
  }

  const formatDate = (date: string) => {
    const dateObj = new Date(date);
    const year = dateObj.getFullYear();
    const month = dateObj.getMonth() + 1;
    const day = dateObj.getDate();
    return `${year}/${month}/${day}`;
  };

  const previewContent = (content: string) => {
    const preview = content.slice(0, 40);
    return (preview + '...');
  };

  return (
    <div className="flex-shrink-0 w-64 bg-white rounded-lg">
      <Link href={`` + href}>
        <div className='bg-gray-100 rounded-t-lg h-32 flex justify-center items-center'>
          {/* „É©„É≥„ÉÄ„É†„ÅßTwemoji„ÇíË°®Á§∫„Åó„Åü„ÅÑ */}
          <span className='text-6xl'>
            <Twemoji
              icon={randomEmoji(created_at)}
            />
          </span>
        </div>
        <div className="p-5">
          <div className="mb-2 text-base font-bold tracking-tight text-gray-900">{title}</div>
          <p className="text-gray-700 text-left text-sm mb-1">{formatDate(created_at)}</p>
          <div className='flex items-center justify-end'>
            {/* <img
              src={data.edges.profile.icon_url}
              className='w-5 h-5 rounded inline'
              alt='„É¶„Éº„Ç∂„Éº„Ç¢„Ç§„Ç≥„É≥'
            /> */}
            {/* <Image
              src={data.edges.profile.icon_url}
              alt='„É¶„Éº„Ç∂„Éº„Ç¢„Ç§„Ç≥„É≥'
              width={20}
              height={20}
              className='rounded inline'
            /> */}
            {/* <span className='text-sm text-slate-800 pl-2'>{data.edges.profile.nickname}</span> */}
          </div>
        </div>
      </Link>
    </div>
  );
};

export default Card;
